/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package helpline;

import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.CLOSED_OPTION;
import static javax.swing.JOptionPane.NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vanilla
 */
public class Customer_Report extends javax.swing.JFrame {
    private boolean bEdit = false;
    private static int NewID = 0;
    private static int Size = 0;


    /**
     * Creates new form Customer_Report
     */
    public Customer_Report() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_ReportForm = new javax.swing.JLabel();
        lbl_FirstName = new javax.swing.JLabel();
        lbl_Surname = new javax.swing.JLabel();
        lbl_Address = new javax.swing.JLabel();
        lbl_Postcode = new javax.swing.JLabel();
        lbl_Telephone = new javax.swing.JLabel();
        lbl_DateReported = new javax.swing.JLabel();
        lbl_Problem = new javax.swing.JLabel();
        lbl_Severity = new javax.swing.JLabel();
        lbl_StaffRecieving = new javax.swing.JLabel();
        lbl_StaffFixing = new javax.swing.JLabel();
        lbl_DateResolved = new javax.swing.JLabel();
        lbl_RepairCost = new javax.swing.JLabel();
        lbl_EquipType = new javax.swing.JLabel();
        txt_FirstName = new javax.swing.JTextField();
        txt_Surname = new javax.swing.JTextField();
        txt_Address = new javax.swing.JTextField();
        txt_Postcode = new javax.swing.JTextField();
        txt_Telephone = new javax.swing.JTextField();
        txt_ReportDate = new javax.swing.JTextField();
        txt_EquipType = new javax.swing.JTextField();
        txt_Problem = new javax.swing.JTextField();
        txt_StaffRecieving = new javax.swing.JTextField();
        txt_StaffFixing = new javax.swing.JTextField();
        txt_DateResolved = new javax.swing.JTextField();
        txt_RepairCost = new javax.swing.JTextField();
        btn_Submit = new javax.swing.JButton();
        btn_Back = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        lbl_FirstName1 = new javax.swing.JLabel();
        txt_Customer = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_Delete = new javax.swing.JButton();
        btn_Edit = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lbl_ReportForm.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        lbl_ReportForm.setText("Customer Reporting Form");

        lbl_FirstName.setText("First Name");

        lbl_Surname.setText("Surname");

        lbl_Address.setText("Address");

        lbl_Postcode.setText("Postcode");

        lbl_Telephone.setText("Telephone");

        lbl_DateReported.setText("Date Reported");

        lbl_Problem.setText("Problem");

        lbl_Severity.setText("Severity");

        lbl_StaffRecieving.setText("Staff Recieving");

        lbl_StaffFixing.setText("Staff Fixing");

        lbl_DateResolved.setText("Date Resolved");

        lbl_RepairCost.setText("Est Repair Cost");

        lbl_EquipType.setText("Equipment Type");

        txt_FirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_FirstNameActionPerformed(evt);
            }
        });

        txt_Surname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SurnameActionPerformed(evt);
            }
        });

        txt_Address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AddressActionPerformed(evt);
            }
        });

        txt_Postcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_PostcodeActionPerformed(evt);
            }
        });

        txt_Telephone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TelephoneActionPerformed(evt);
            }
        });

        txt_ReportDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ReportDateActionPerformed(evt);
            }
        });

        txt_EquipType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_EquipTypeActionPerformed(evt);
            }
        });

        txt_Problem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ProblemActionPerformed(evt);
            }
        });

        txt_StaffRecieving.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_StaffRecievingActionPerformed(evt);
            }
        });

        txt_StaffFixing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_StaffFixingActionPerformed(evt);
            }
        });

        txt_DateResolved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_DateResolvedActionPerformed(evt);
            }
        });

        txt_RepairCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_RepairCostActionPerformed(evt);
            }
        });

        btn_Submit.setText("Submit");
        btn_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SubmitActionPerformed(evt);
            }
        });

        btn_Back.setText("Back");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 (High)", "2 (Medium)", "3 (Low)" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        lbl_FirstName1.setText("Customer ID");

        txt_Customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CustomerActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustomerReportingFormID", "FirstName", "Surname", "Address", "Postcode", "Telephone", "Date Reported", "Equipment Type", "Nature of Problem", "Severity", "Staff receiving equipment", "Staff assigned to fix equipment", "Date resolved", "Estimated cost of repair"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        btn_Edit.setText("Edit");
        btn_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btn_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_Edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_FirstName)
                                    .addComponent(lbl_FirstName1)
                                    .addComponent(lbl_Surname)
                                    .addComponent(lbl_Address)
                                    .addComponent(lbl_Postcode)
                                    .addComponent(lbl_Telephone)
                                    .addComponent(lbl_DateReported))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_Customer, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Surname, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Postcode, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_ReportDate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Problem, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_Severity, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_StaffRecieving, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_StaffFixing, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_DateResolved, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_RepairCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_EquipType, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_EquipType)
                            .addComponent(txt_Problem)
                            .addComponent(txt_StaffRecieving)
                            .addComponent(txt_StaffFixing)
                            .addComponent(txt_DateResolved)
                            .addComponent(txt_RepairCost)
                            .addComponent(jComboBox1, 0, 130, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(lbl_ReportForm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lbl_ReportForm)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_EquipType)
                            .addComponent(txt_EquipType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Problem)
                            .addComponent(txt_Problem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Severity)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_StaffRecieving)
                            .addComponent(txt_StaffRecieving, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_StaffFixing)
                            .addComponent(txt_StaffFixing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_DateResolved)
                            .addComponent(txt_DateResolved, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_RepairCost)
                            .addComponent(txt_RepairCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_FirstName1)
                            .addComponent(txt_Customer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_FirstName)
                            .addComponent(txt_FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Surname)
                            .addComponent(txt_Surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Address)
                            .addComponent(txt_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Postcode)
                            .addComponent(txt_Postcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Telephone)
                            .addComponent(txt_Telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_DateReported)
                            .addComponent(txt_ReportDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Back)
                    .addComponent(btn_Submit)
                    .addComponent(btn_Delete)
                    .addComponent(btn_Edit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_RepairCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_RepairCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_RepairCostActionPerformed

    private void btn_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SubmitActionPerformed
    Pattern pat = Pattern.compile("[^a-z ]", Pattern.CASE_INSENSITIVE); //allows only text inputs e.g. name fields
    Pattern pat2 = Pattern.compile("[^0-9.]");
    Pattern pat3 = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE); //validation for only allowing numbers & letters, e.g. an address
    Pattern pat4 = Pattern.compile("\\d{4}-\\d{2}-\\d{2}", Pattern.CASE_INSENSITIVE); //validation for a date, format "YYYY/MM/DD"
    Pattern pat5 = Pattern.compile("[^0-9]");
     
    Matcher customerID = pat5.matcher(txt_Customer.getText());
    Matcher firstName = pat.matcher(txt_FirstName.getText());
    Matcher Surname = pat.matcher(txt_Surname.getText());
    Matcher address = pat3.matcher(txt_Address.getText());
    Matcher postcode = pat3.matcher(txt_Postcode.getText());
    Matcher telephone = pat3.matcher(txt_Telephone.getText());
    Matcher dateReported = pat4.matcher(txt_ReportDate.getText());
    Matcher equiptype = pat.matcher(txt_EquipType.getText());  
    Matcher problem = pat.matcher(txt_Problem.getText());
    Matcher combo = pat.matcher(jComboBox1.getSelectedItem().toString());
    Matcher staffrecieving = pat2.matcher(txt_StaffRecieving.getText());
    Matcher fixing = pat2.matcher(txt_StaffFixing.getText());
    Matcher dateReolved = pat4.matcher(txt_DateResolved.getText());
    Matcher repairCost = pat2.matcher(txt_RepairCost.getText());
    
    if (txt_Customer.getText().equals("") || txt_FirstName.getText().equals("") || txt_Surname.getText().equals("") || txt_Address.getText().equals("") || txt_Postcode.getText().equals("") || txt_Telephone.getText().equals("") || txt_ReportDate.getText().equals("") || txt_EquipType.getText().equals("") || txt_Problem.getText().equals("") || jComboBox1.getSelectedItem().toString().equals("") || txt_StaffRecieving.getText().equals("") || txt_StaffFixing.getText().equals("") || txt_DateResolved.getText().equals("") || txt_RepairCost.getText().equals("")) //validating making sure fields aren't empty (add names of text boxes)
    {
        JOptionPane.showMessageDialog(null, "Please fill in all sections of the form!", "Error", JOptionPane.WARNING_MESSAGE);
    }
    else
    {
        if (customerID.find() || firstName.find() || Surname.find() || address.find() || postcode.find() || telephone.find() || dateReported.find() || equiptype.find() || problem.find() || combo.find() || staffrecieving.find() || fixing.find() || dateReolved.find() || repairCost.find()) //uses matchers from above, add/remove as needed
        {
            if (txt_Postcode.getText().length() < 8) { //ensuring the postcode field isn't too long
		AddData(); //calls function for generating the sql
            } else {
                   JOptionPane.showMessageDialog(null, "Please enter a valid Post Code!", "Error", JOptionPane.WARNING_MESSAGE);
                }
            if (bEdit == false)
                            {
                                AddData();
                            }
                            else
                            {
                                UpdateData();
                            }
                            Clear();
                            TableLoad();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please only input valid characters!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }
    }//GEN-LAST:event_btn_SubmitActionPerformed

    public void AddData(){
        try {
        Class.forName("com.mysql.jdbc.Driver"); //don't need to change anything here
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/helpline?allowMultiQueries=true","user","user");
 
    	//in first marks input table name, then in the marks in the brackets, the column headings, add/remove as needed.
	//in second brackets, change names of text fields, add more as needed
        
        String DateReported = txt_ReportDate.getText();
        String DateResolved = txt_DateResolved.getText();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date reported;
        Date resolved;
        try {
            reported = (Date) df.parse(DateReported);
            resolved = (Date) df.parse(DateResolved);  
            String dteReported = df.format(reported);
            String dteResolved = df.format(resolved);
            
            String insert = "INSERT INTO `customer reporting form` VALUES (?, ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ?) ";
            PreparedStatement ps = con.prepareStatement(insert);
            ps.setInt(1, Integer.parseInt(txt_Customer.getText()));
            ps.setString(2, txt_FirstName.getText());
            ps.setString(3, txt_Surname.getText());
            ps.setString(4, txt_Address.getText());
            ps.setString(5, txt_Postcode.getText());
            ps.setString(6, txt_Telephone.getText());
            ps.setString(7, dteReported);
            ps.setString(8, txt_EquipType.getText());
            ps.setString(9, txt_Problem.getText());
            ps.setString(10, jComboBox1.getSelectedItem().toString());
            ps.setInt(11, Integer.parseInt(txt_StaffRecieving.getText()));
            ps.setInt(12, Integer.parseInt(txt_StaffFixing.getText()));
            ps.setString(13, dteResolved);
            ps.setDouble(14, Double.parseDouble(txt_RepairCost.getText()));

            ps.executeUpdate();
            
            ps.execute(insert);
            con.close(); // FIX 
        } catch (ParseException e) {
            e.printStackTrace();
        }           
    } 
    catch (Exception ex) {
	Logger.getLogger(HelpLine.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    private void RemoveData(){
        boolean bFailed = false;
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/helpline?allowMultiQueries=true","user","user");
            Statement stmt = (Statement)con.createStatement();
            
            String sql = "DELETE FROM `customer reporting form` WHERE `Customer` = '"+Integer.parseInt(txt_Customer.getText())+"'";
            stmt.execute(sql);
            con.close();            
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(HelpLine.class.getName()).log(Level.SEVERE, null, ex);
            bFailed = true;
            JOptionPane.showMessageDialog(null, "Error in deleting Record!", "Error", JOptionPane.WARNING_MESSAGE);
        }
        if (bFailed == false)
        {
            int index = 0;
            for (int i = 0; i < Size; i++)
            {
                if (Navigation.CustomerReportTbl.get(0).get(i).equals(txt_Customer.getText()))
                {
                    index = i;
                }
            }
            Navigation.CustomerReportTbl.get(0).remove(index);
            Navigation.CustomerReportTbl.get(1).remove(index);
            Navigation.CustomerReportTbl.get(2).remove(index);
            Navigation.CustomerReportTbl.get(3).remove(index);
            Navigation.CustomerReportTbl.get(4).remove(index);
            Navigation.CustomerReportTbl.get(5).remove(index);
            Navigation.CustomerReportTbl.get(6).remove(index);
            Navigation.CustomerReportTbl.get(7).remove(index);
            Navigation.CustomerReportTbl.get(8).remove(index);
            Navigation.CustomerReportTbl.get(9).remove(index);
            Navigation.CustomerReportTbl.get(10).remove(index);
            Navigation.CustomerReportTbl.get(11).remove(index);
            Navigation.CustomerReportTbl.get(12).remove(index);
            Navigation.CustomerReportTbl.get(13).remove(index);
        }
    }
    
    private void UpdateData() {
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/helpline?allowMultiQueries=true","user","user");
            Statement stmt = (Statement)con.createStatement();
            
            String sql = "UPDATE `customer reporting form` SET `Customer` = '"+Integer.parseInt(txt_Customer.getText())+"' , `FirstName` = '"+txt_FirstName.getText()+"' , `Surname` = '"+txt_Surname.getText()+"', `Address` = '"+txt_Address.getText()+"', `PostCode` = '"+txt_Postcode.getText()+"', `Telephone` = '"+txt_Telephone.getText()+"', `Date Reported` = '"+txt_ReportDate.getText()+"', `Equipment Type` = '"+txt_EquipType.getText()+"', `Problem` = '"+txt_Problem.getText()+"', `Severity` = '"+jComboBox1.getSelectedItem().toString()+"',`Staff Recieving` = '"+txt_StaffRecieving.getText()+"',`Staff Fixing` = '"+txt_StaffFixing.getText()+"',`Date Resolved` = '"+txt_DateResolved.getText()+"', `Repair Cost` = '"+txt_RepairCost.getText()+"', = '"+Integer.parseInt(txt_Customer.getText())+"'";
            stmt.execute(sql);
            con.close();            
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(HelpLine.class.getName()).log(Level.SEVERE, null, ex);
        }
        int index = 0;
        for (int i = 0; i < Size; i++)
        {
            if (Navigation.CustomerReportTbl.get(0).get(i).equals(txt_Customer.getText()))
            {
                index = i;
            }
        }
        Navigation.CustomerReportTbl.get(0).set(index, txt_Customer.getText());
        Navigation.CustomerReportTbl.get(1).set(index, txt_FirstName.getText());
        Navigation.CustomerReportTbl.get(2).set(index, txt_Surname.getText());
        Navigation.CustomerReportTbl.get(3).set(index, txt_Address.getText());
        Navigation.CustomerReportTbl.get(4).set(index, txt_Postcode.getText());
        Navigation.CustomerReportTbl.get(5).set(index, txt_Telephone.getText());
        Navigation.CustomerReportTbl.get(6).set(index, txt_ReportDate.getText());
        Navigation.CustomerReportTbl.get(7).set(index, txt_EquipType.getText());
        Navigation.CustomerReportTbl.get(8).set(index, txt_Problem.getText());
        Navigation.CustomerReportTbl.get(9).set(index, jComboBox1.getSelectedItem().toString());
        Navigation.CustomerReportTbl.get(10).set(index, txt_StaffRecieving.getText());
        Navigation.CustomerReportTbl.get(11).set(index, txt_StaffFixing.getText());
        Navigation.CustomerReportTbl.get(12).set(index, txt_DateResolved.getText());
        Navigation.CustomerReportTbl.get(13).set(index, txt_RepairCost.getText());  
    }
    
    private void TableLoad() {
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        
        tableModel.setRowCount(0);
        
        for (int i = 0; i < Navigation.CustomerReportTbl.get(1).size(); i++)
        {
            Object[] rowData = { 
                Navigation.CustomerReportTbl.get(0).get(i), 
                Navigation.CustomerReportTbl.get(1).get(i), 
                Navigation.CustomerReportTbl.get(2).get(i), 
                Navigation.CustomerReportTbl.get(3).get(i),
                Navigation.CustomerReportTbl.get(4).get(i),
                Navigation.CustomerReportTbl.get(5).get(i),
                Navigation.CustomerReportTbl.get(6).get(i),
                Navigation.CustomerReportTbl.get(7).get(i),
                Navigation.CustomerReportTbl.get(8).get(i),
                Navigation.CustomerReportTbl.get(9).get(i),
                Navigation.CustomerReportTbl.get(10).get(i),
                Navigation.CustomerReportTbl.get(11).get(i),
                Navigation.CustomerReportTbl.get(12).get(i),
                Navigation.CustomerReportTbl.get(13).get(i)

            };
            tableModel.addRow(rowData);
        }
    }
    
    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
        Navigation NavBack = new Navigation();
        NavBack.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_BackActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txt_FirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_FirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_FirstNameActionPerformed

    private void txt_SurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SurnameActionPerformed

    private void txt_AddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AddressActionPerformed

    private void txt_PostcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_PostcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_PostcodeActionPerformed

    private void txt_TelephoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TelephoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TelephoneActionPerformed

    private void txt_ReportDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ReportDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ReportDateActionPerformed

    private void txt_EquipTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_EquipTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_EquipTypeActionPerformed

    private void txt_ProblemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ProblemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ProblemActionPerformed

    private void txt_StaffRecievingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_StaffRecievingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_StaffRecievingActionPerformed

    private void txt_StaffFixingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_StaffFixingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_StaffFixingActionPerformed

    private void txt_DateResolvedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_DateResolvedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_DateResolvedActionPerformed

    private void txt_CustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CustomerActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    txt_Customer.setEnabled(false); //disabling the autogenerated StaffID text file
    int IDGen = Navigation.CustomerReportTbl.get(1).size(); //getting size of array for last ID generated
    txt_Customer.setText(Integer.toString(Integer.parseInt(Navigation.CustomerReportTbl.get(1).get(IDGen)) + 1)); //Generating a new ID
    DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel(); //declaring a tablemodel for adding records to the JTable
       
    for (int i = 0; i < Navigation.CustomerReportTbl.get(1).size(); i++) //loop to add all records to table
    {
       Object[] rowData = { 
          Navigation.CustomerReportTbl.get(0).get(i), //each comma is info for a new row
          Navigation.CustomerReportTbl.get(1).get(i), 
          Navigation.CustomerReportTbl.get(2).get(i), 
          Navigation.CustomerReportTbl.get(3).get(i),
          Navigation.CustomerReportTbl.get(4).get(i),
          Navigation.CustomerReportTbl.get(5).get(i),
          Navigation.CustomerReportTbl.get(6).get(i),
          Navigation.CustomerReportTbl.get(7).get(i),
          Navigation.CustomerReportTbl.get(8).get(i),
          Navigation.CustomerReportTbl.get(9).get(i),
          Navigation.CustomerReportTbl.get(10).get(i),
          Navigation.CustomerReportTbl.get(11).get(i),
          Navigation.CustomerReportTbl.get(12).get(i),
          Navigation.CustomerReportTbl.get(13).get(i)
       };
      tableModel.addRow(rowData); //adding the data into the table
    }
    jTable1.setEnabled(false); //disabling the table on load
    }//GEN-LAST:event_formWindowOpened

    private void Clear() {
        txt_Customer.setText(Integer.toString(NewID));
        txt_FirstName.setText("");
        txt_Surname.setText("");
        txt_Address.setText("");
        txt_Postcode.setText("");
        txt_Telephone.setText("");
        txt_ReportDate.setText("");
        txt_EquipType.setText("");
        txt_Problem.setText("");
        jComboBox1.setSelectedItem("Please Select");
        txt_StaffRecieving.setText("");
        txt_StaffFixing.setText("");
        txt_DateResolved.setText("");
        txt_RepairCost.setText("");
    }
    
    private void btn_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EditActionPerformed
        if (btn_Edit.getText().equals("Edit Record"))
        {
            btn_Edit.setText("New Record");
            jTable1.setEnabled(true);
            bEdit = true;
        }
        else if (btn_Edit.getText().equals("New Record"))
        {
            btn_Edit.setText("Edit Record");
            jTable1.setEnabled(false);
            bEdit = false;
            Clear();
        }
    }//GEN-LAST:event_btn_EditActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        switch(JOptionPane.showConfirmDialog(null,"Delete record?", "Delete", JOptionPane.YES_NO_OPTION))
        {
            case YES_OPTION:
                
                if (bEdit == false)
                {
                    Clear();
                }
                else if (bEdit == true)
                {
                    RemoveData();
                    Clear();
                    TableLoad();
                }
                break;
            case NO_OPTION:
            case CLOSED_OPTION:
                break;
        }
    }//GEN-LAST:event_btn_DeleteActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer_Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JToggleButton btn_Edit;
    private javax.swing.JButton btn_Submit;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_Address;
    private javax.swing.JLabel lbl_DateReported;
    private javax.swing.JLabel lbl_DateResolved;
    private javax.swing.JLabel lbl_EquipType;
    private javax.swing.JLabel lbl_FirstName;
    private javax.swing.JLabel lbl_FirstName1;
    private javax.swing.JLabel lbl_Postcode;
    private javax.swing.JLabel lbl_Problem;
    private javax.swing.JLabel lbl_RepairCost;
    private javax.swing.JLabel lbl_ReportForm;
    private javax.swing.JLabel lbl_Severity;
    private javax.swing.JLabel lbl_StaffFixing;
    private javax.swing.JLabel lbl_StaffRecieving;
    private javax.swing.JLabel lbl_Surname;
    private javax.swing.JLabel lbl_Telephone;
    private javax.swing.JTextField txt_Address;
    private javax.swing.JTextField txt_Customer;
    private javax.swing.JTextField txt_DateResolved;
    private javax.swing.JTextField txt_EquipType;
    private javax.swing.JTextField txt_FirstName;
    private javax.swing.JTextField txt_Postcode;
    private javax.swing.JTextField txt_Problem;
    private javax.swing.JTextField txt_RepairCost;
    private javax.swing.JTextField txt_ReportDate;
    private javax.swing.JTextField txt_StaffFixing;
    private javax.swing.JTextField txt_StaffRecieving;
    private javax.swing.JTextField txt_Surname;
    private javax.swing.JTextField txt_Telephone;
    // End of variables declaration//GEN-END:variables
}
